<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="UTF-8"/><title>Payments</title><meta name="generator" content="Adobe RoboHelp 2019"/><link rel="stylesheet" href="../assets/css/default.css"/><link rel="stylesheet" href="../assets/css/PortaBilling_Admin_Guide_MR82.css"/></head><body><div><h2><a id="_Toc31205462"></a>Payments</h2><p>PortaBilling® allows payments to be processed online, without the intervention of an operator, by charging the customer’s credit card or debiting his bank account. Payments may be initiated by:</p><ul data-start="401" xmlns=""><li>Your subscribers from the web interface (called “online payments” because payment is triggered by the customer, who is using the web interface at the moment the payment is made).</li><li>The PortaBilling® system itself. These payments are called auto-payments, because they usually happen automatically.<h3>Payment flow</h3><p>The following picture illustrates the individual components of the online payment system:</p><p> </p><p></p><h4>Merchant account</h4><p>A merchant account must be opened at a bank. Its purpose is similar to that of a normal checking account. It stores funds you have received from credit card payments.</p><h4>Online payment processor</h4><p>A merchant account is usually enough to start processing credit card payments via charge slips. However, if you wish to initiate transactions from your own server via the Internet, this service is provided by online payment processors such as Authorize.Net. You establish an account with an online payment processor, providing it with your merchant account information, and in return you receive credentials (username, password, etc.) for using its API. So now your application can connect to the API’s server and, upon providing valid authentication information, initiate transactions.</p><h4>Business::OnlinePayment framework</h4><p>Unfortunately, there are many different online payment processors, most of them using their own API which is different from that of other providers. So it seems that every e-commerce application such as PortaBilling® must be programmed to support them all, which is an extremely laborious task. Fortunately, PortaBilling® provides a solution. Business::OnlinePayment is a framework which provides the necessary middleware between e-commerce applications and online payment processors. </p></li><li>The application is provided with unified API methods, e.g. doTransaction, so the same code in the application can be used to communicate with any online payment processor.</li><li>A communication plug-in is created for each online payment processor. This plug-in knows such specific parameters as the server’s address, the correct way of encoding transaction parameters, the proper way of parsing the server’s response, and so on.</li></ul><p> </p><p>On the application side, therefore, only a few things are required: loading the correct plug-in and invoking a transaction method. After that control is handed over to the plug-in, which handles all communication with the remote server.</p><p> </p><p>The whole Business::OnlinePayment project is open-source, and is maintained by a large team of individuals. At the moment more than 20 different plug-in modules are supplied with PortaBilling®, and it is easy to create new plug-ins for online payment processors. You can find the list of supported online payment processors in <a href="#_APPENDIX_F._Supported">APPENDIX F. Supported Online Payment processors</a>.</p><h4>PortaBilling® payment support</h4><p>PortaBilling® stores required information, such as customer name and address, credit card number, and so on, in the database. Multiple merchant accounts are supported (for instance, your merchant account A accepts payments in USD, while account B takes payments in euros). You may define a “minimum allowed payment” and a list of supported card types (VISA, MC, etc.) for every merchant account.</p><p> </p><p>When payment is initiated (either by the customer from web self-care, or automatically) the system connects to the online payment processor and performs the transaction. The online payment processor verifies the credit card information (and performs optional steps such as address verification or CVV control). Upon receiving confirmation that the transaction was successful, PortaBilling® writes transaction information to the PortaBilling® database and modifies the balance for the account / customer.</p><p> </p><p>Depending on the type of payment processor being used, both the time when PortaBilling® sends the request and receives transaction confirmation will differ. Thus, two separate events are performed within a single e-commerce payment transaction and are reflected in an xDR record: </p><ul data-start="1.482" xmlns=""><li><ul data-start="1.482"><li>Transaction date – is the date upon which a customer makes a credit card payment and PortaBilling® sends a request to the payment processor. </li><li>Posting date – is the date upon which PortaBilling® receives the transaction confirmation from the payment system and creates an xDR record. Thus, the posting date coincides with the date of the xDR record. </li></ul></li></ul><p> </p><p><img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image253.png" width="1252.8" height="691.9" alt="Transaction details"/></p><p>NOTE: In most cases, the posting date comes after the transaction date. However, the posting date comes before the transaction date in cases when postpaid customers prefer to pay their invoices automatically by credit card. </p><h4>Supported payment methods</h4><p>The choice of available payment methods depends on the online payment processor. In general, however, PortaBilling® supports the following payment methods:</p><ul data-start="405" xmlns=""><li>American Express</li><li>E-check (direct debit from bank account)</li><li>Direct Debit</li><li>Discover</li><li>Switch / Maestro</li><li>MasterCard</li><li>VISA.</li></ul><p> </p><p>Service providers and their resellers can also accept Bitcoin crypto currency payments for services provided. Refer to the <a href="#_Bitcoin_Support_in">Bitcoin Support in PortaBilling®</a> section for more details. </p><h3>Recurring payments without storing credit card info</h3><p>Auto-payment helps improve the payment process for both the end user and the service provider since it is convenient and requires minimum effort on either part. When configured by either an administrator or end user, recurring payments are automatically charged to the user’s credit card and applied to the user’s balance.</p><p> </p><p>However, auto-payment requires that the service provider store the end user’s credit card information. Typically, this means that the service provider must obtain PCI DSS or similar security certification, a time-consuming process that requires periodic updating. </p><p> </p><p>There is an alternative method for dealing with this situation. It takes advantage of the fact that some payment processors can store credit card information securely on their servers. They do this by generating a token after the initial transaction. The token is not the credit card information but an identifier of it, and so the token can be used for subsequent payments.</p><p> </p><p>With token-based payment processing, the payment process proceeds as follows. When a customer makes a first-time online payment via the self-care interface, the credit card information entered is stored for use with future payments and forwarded to the payment processor. If the transaction is successful, the payment processor returns a token, which is stored, and when the next payment needs to be made, it is made automatically based on the stored token rather than the actual credit card data. </p><p> </p><p>PortaBilling® supports token-based payment processing for the Secure Hosting and Payments, Authorize.Net, Payment Express and Virtual Card Services payment processors. Future releases will support additional token-based payment processors.</p><p> </p><p>With token-based payment processing Auto-payment can be launched almost immediately since no PCI DSS certification is required.</p><h3><a id="_Payments_via_external"></a>Payments via external payment systems </h3><p>Along with payment methods such as paying via credit card, there are online payment systems that provide users with a virtual wallet (e.g. PayPal). PortaBilling® allows your customers to pay via such payment systems directly from their personal computers within web browser.</p><p> </p><p>The process works like this: a customer logs into his customer self-care interface, chooses an appropriate payment method, clicks the Pay button and is redirected to a third-party website for processing. Once the user confirms his payment information he is redirected back to his account in PortaBilling® where he can view his balance update. </p><p>NOTE: External payment systems do not permit recurring (automated) payments.</p><h4>PayPal</h4><p>Let’s take a practical example to better understand the payment flow process. Let’s assume that the customer uses PayPal to pay for consumed services. The customer logs into the customer self-care portal, chooses PayPal, clicks the Pay Now button and is redirected to the PayPal site where he logs into his PayPal account, chooses the funding source and confirms his payment by clicking the Pay button. PayPal then processes the payment and sends the payment information to PortaBilling® where it is recorded and the customer’s balance is updated. The customer is then redirected to the self-care portal where he can view the payment status.</p><h4>Payarena </h4><p>Payarena is the payment system in Nigeria using which Nigerian service providers can offer their customers extensive possibilities for payment operations plus manage their e-commerce payments in PortaBilling®. </p><p> </p><p>The payment flow is similar to that of other external payment processors. When a customer initiates a payment from their self-care interface, they are redirected to the Payarena portal to provide their credit card information and confirm the payment. Upon payment processing the customer is redirected back to the self-care interface where they see their payment status and newly modified balance.</p><h4><a id="_Remita"></a>Remita</h4><p>Remita is another external payment system in Nigeria that expands the list of payment processors available for managing e-commerce payments in PortaBilling®.</p><p> </p><p>The payment flow is very simple. When a customer initiates a payment on their self-care portal, PortaBilling® redirects them to the Remita portal where they can fill in their credit card details and submit payment. Once payment is processed, the customer is redirected back to their self-care portal in PortaBilling® where they can check their payment status and their updated balance.</p><p> </p><p>All sensitive information such as credit card details, CVV code, etc. are handled by Remita. Thus, service providers avoid system scrutiny for passing PCI compliance. This enables them to launch their e-payment processing almost immediately. </p><h5>Implementation specifics: </h5><ul data-start="1.484" xmlns=""><li><ul data-start="1.484"><li>Remita processes payments starting from 50 NGN. Thus, an administrator must define 50 NGN as the minimum payment for the Remita payment system on the Currencies panel.</li><li>To process a payment, a customer e-invoice is generated on the Remita portal. The payer’s phone number and email address are obligatory for the e-invoice. These fields are prepopulated with the data pulled from the end user’s account in PortaBilling®. Therefore, the phone number and email address fields on customer / account records must be filled in.</li></ul></li></ul><h3>PayNearMe</h3><p>PayNearMe is yet another payment system that allows your customers to pay for services in cash at any 7-Eleven or ACE Cash Express store across the United States. This option provides great value for users who may not have access to a credit card or bank account.</p><p> </p><p>The payment process is quite simple. A customer views the PayNearMe payment slip on his self-care interface and prints it. The payment slip contains the bar code to be scanned at a 7-Eleven or ACE Cash Express location. Customer pays cash to the store clerk, who then records the transaction – the payment information is immediately delivered to the service provider via the PayNearMe network. PortaBilling® records the transaction and updates the customer’s balance so the customer can immediately start using the service.</p><h3>Receiving payments from external payment gateways</h3><p>Yet another alternative to paying via credit card is to pay in cash. The payment can be made via an external payment system. The information about the transaction is then sent to PortaBilling® via the external payment gateway and PortaBilling® records the transaction and updates the customer’s balance.</p><p> </p><p>One example is receiving payments made via payment terminals. This payment method is one of the most popular and frequently used in the Russian Federation and other developing countries. The payment process is the following: the customer chooses a service provider on the screen of a payment terminal, enters his customer ID or account ID, inserts cash into the payment terminal and confirms the payment. The payment is processed and a request is sent to PortaBilling® along with confirmation of successful payment. The request is then processed by PortaBilling® and the customer’s balance is updated.</p><p> </p><p>Some minor integration with PortaBilling® is required for supporting a specific external payment gateway. This is performed with the help of a plug-in created by PortaOne. </p><h3>Bitcoin support in PortaBilling®  </h3><p>Service providers and their resellers can accept Bitcoin crypto currency payments for services provided. </p><p> </p><p>To enable Bitcoin payments in PortaBilling® an administrator / reseller needs to specify the address of a centralized Bitcoin wallet which will store all received bitcoins and define a minimum payment.  </p><p> </p><p><img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image254.png" width="460.8" height="138.9" alt="Bitcoins"/></p><p> </p><p>For each end user, the centralized Bitcoin wallet generates a unique address where payments are sent. This address is shown on the self-care interface when the end user chooses the Pay with Bitcoin option. The end user then sends the top-up amount to this address from his / her individual Bitcoin wallet. Once the payment is received, it is transferred to the centralized Bitcoin wallet that is owned by the service provider or reseller and that end user’s balance is topped up.  </p><p> </p><p>For user convenience, the Bitcoin address can be scanned with a QR code.   </p><p> </p><p><img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image255.png" width="1010.9" height="439.9" alt="Pay with bitcoin"/></p><p> </p><p>The principal strength of Bitcoin is that it offers anonymity to end users. When a Bitcoin transaction takes place, no personal identifying information such as name and address are required. With Bitcoin support in PortaBilling®, service providers and resellers are able to offer their services to their customers who care about privacy and want it preserved. </p><h3>Mobile payment remittance</h3><p>This service allows your customers to transfer funds from their accounts in PortaSwitch to a mobile phone’s balance in another country. This service is very popular in expat communities, since people who regularly use a VoIP service to call their families back home can also top up the balance on their relative’s cell phone.</p><p> </p><p></p><h4>What is a remittance processor?</h4><p>A remittance processor (such as TransferTo) is a transaction processing system that delivers international top-up services. You create an account with an online remittance processor, provide it with your company information and establish the method of transferring funds from you to it on a periodic basis. In return, you receive credentials (username, password, etc.) for initiating transactions via the remittance API. Now your application can connect to the API server and, upon providing valid authentication information, request that funds be transferred to a customer of a mobile carrier.</p><p> </p><p>The system functions in the following way:</p><ol data-start="1" xmlns=""><li>Customer A subscribes to VoIP services provided by company X using the PortaSwitch platform. A adds funds to his account in PortaSwitch (cash payment, credit card, voucher, etc.).</li><li>A wants to send funds to the mobile phone of his relative, B.</li><li>A uses PortaSwitch (via web interface, IVR or SMS) to initiate a mobile remittance transaction. Funds are withdrawn from his account in PortaSwitch and the remittance processor Y is instructed to transfer the funds to B’s mobile phone.</li><li>Y contacts the mobile carrier that owns the network that B’s mobile phone is connected to, and instructs that funds be added to B’s account.</li><li>Later (on a periodic basis), service provider X transfers funds to the remittance processor to cover the total of all such transactions in the period. </li></ol><h4>Relationship between transferred and debited amounts</h4><p>By the nature of international mobile balance transfers, the recipient of the payment will receive the funds in a currency different from the one used by the “donor.” Hence the question of exchange rates arises. The service provider naturally wants to ensure that:</p><ul data-start="412" xmlns=""><li>The amount that is withdrawn from the donor’s account is no less than the actual cost (the amount that the service provider will have to pay to the remittance processor to cover the funds actually delivered to the recipient, given the exchange rate and fees applied by the remittance processor).</li><li>The amount that is withdrawn from the donor’s account incorporates a profit margin for you as the service provider. <p> </p><p>For example, when a transfer of 50 Australian dollars is made, if the amount payable to the remittance processor (given the AUD:USD exchange rate and the remittance processor’s transaction fee) is 52.369 US dollars, then the amount debited from the donor’s account will be $53.37, since it includes your profit of US $1.00.</p><p> </p></li><li>The amount that is withdrawn from the donor’s account is represented by a number that is easy for the end user to understand. Payment remittance cannot perform top-ups with an arbitrary amount (e.g. you cannot request that an amount like 0.05 AUD or 9.99 AUD be added to the remote mobile phone’s balance), and so usually there is a predefined set of allowed values for each mobile network. </li></ul><p> </p><p>This list depends not only on the target currency, but sometimes also on the details of the arrangement with a given mobile operator, e.g. for the Aircel network in India the allowable values might be 500, 1000 and 5000 rupees, while for the Idea! mobile network (also in India) they will be 200, 400, 800 and 2000. So if a chosen “target” amount is converted into the “debit” amount using only the exchange rate, it will most likely result in an awkward number with decimal digits. Clearly, in most situations you will want to announce a nice “round” number to the user, i.e. the IVR announcement, “Your account will be debited fifty-four dollars” is better than “Your account will be debited fifty-three point thirty-seven dollars.”</p><p> </p><p>In order to address all of these challenges, the PortaSwitch administrator configures a special “mapping” tariff that flexibly defines the amounts allowed to be added to a remote user’s balance and the corresponding amount to be debited from a PortaSwitch account. For instance, in order to allow customers with balances in USD to transfer 2,000 Indian rupees to a remote user on a mobile network, the following will be done:</p><ol data-start="1" xmlns=""><li>The administrator creates destination INR2000.</li><li>Then he creates a special tariff (in USD currency and using the Messaging service) that will be used to authorize mobile remittance operations for customers with balances in USD.</li><li>Finally, this tariff’s administrator will create a rate for destination INR2000 and specify the Unit Price as the amount that should be debited from the donor’s account – in this case, 2,000 Indian rupees is about US $39, so taking into consideration exchange rate fluctuations, remittance processor markups and his own profit, the administrator will set the value at $45. </li><li>By setting only certain “allowable” transfer values, the administrator can ensure, for instance, that transactions are not too small (where overhead is too high) or too large (where risk of fraud is too high), even if such too small/large top-up amounts are offered by the remittance processor.</li><li>When a customer attempts to initiate a transfer to a phone number (91111111111), PortaSwitch queries the payment remittance server as to whether a transfer to this number is possible (it could be that the number is in a country where the remittance service is not yet available, or it is not a mobile phone number, but a landline). </li><li>Then a list of allowable top-up amounts is retrieved and for each of them the authorization tariff is checked; the customer will only be offered the amounts that are listed.</li><li>The customer selects the desired top-up amount, and after he approves the announced amount to be debited PortaSwitch sends a request to the remittance processor to initiate the top-up and debits the amount from the customer’s account.</li></ol><h4>Payment remittance system configuration</h4><p><img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image256.png" width="460.2" height="173.5" alt="payment remittance setup"/></p><p> </p><ol data-start="1" xmlns=""><li>Create a payment remittance system with the TransferTo processor on the Payments page.<p> </p><p>To add a new payment remittance system, click <img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image257.png" width="12.0" height="12.0" alt="add"/> Add and enter the account name, login, password and processor in the edit row at the top of the listing. </p><p> </p><p>Test Mode is a special mode of interaction with the system. It is useful during the initial setup phase, when you may want to test the setup without actually transferring funds.</p><p> </p><p><img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image258.png" width="460.8" height="208.7" alt="Accosiate currency and remittance"/></p><p> </p></li><li>Define the appropriate currency to the payment remittance system on the Currencies page. <p> </p><p>Click <img src="../assets/images/PortaBilling_Admin_Guide_MR82_files/image259.png" width="12.0" height="12.0" alt="add"/> Add and fill out the relevant fields. Select the corresponding payment remittance system. </p><p>NOTE: Only those customers who maintain their balance in the currency for which the remittance system is defined will be able to transfer funds.</p></li><li>Available transfer amounts for users of mobile operator services in various countries are provided by TransferTo in the currency of the destination country. Add the corresponding amounts on the Destinations page in the following format: CCCNNN, where CCC is the currency code and NNN is the amount, e.g. IDR50000, INR500, CNY100 etc.<p> </p></li><li>A specific tariff should be created for each currency assigned to a payment remittance system on the Currencies page. It will only be used for customers sharing the same currency. Create the following tariff:</li></ol><ul data-start="1.486" xmlns=""><li><ul data-start="1.486"><li>Name – The tariff name depends on the currency; define the name in this format: TransferToCCC (e.g. TransferToUSD) where CCC is the currency assigned to the corresponding payment remittance system.</li><li>Currency – Use the same currency as that used for the tariff name.</li><li>Service – Choose Messaging Service here.</li></ul></li></ul><p> </p><ol data-start="5" xmlns=""><li>Add rates to this tariff with the amounts your customers will be able to transfer:</li></ol><ul data-start="1.489" xmlns=""><li><ul data-start="1.489"><li>Rate Codes – Choose the destination created in step 3 (e.g. IDR50000, INR500, CNY100, etc.) for the allowable top-up values. </li><li>Unit Price Initial – In this field, specify how much you want to charge the donor’s account for this transfer.</li></ul></li></ul><p> </p><p>Note that you can only set one fixed price for a ‘currency’–‘amount to transfer’ pair, although TransferTo may charge differently for transferring funds to recipients in different countries or to recipients of different mobile operators within the same country. </p><p> </p><p>For example, TransferTo will charge $5.40 for transferring $5.00 to a recipient of AT&amp;T in the United States and $6.20 for transferring $5.00 to a recipient of BellSouth in Panama. Therefore, it is best to set up a price (the amount to be debited from the donor’s account) which allows for the difference in transaction fees for various recipients.</p><h4>Using the payment remittance system</h4><p>Customers can transfer funds in one of two ways: via the account self-care web interface, or by a special application access number. The recipient is specified and identified by the phone number. The full list of amounts available for transfer is obtained from TransferTo, but only amounts present in the corresponding tariff that are within the customer’s available balance are available for transfer. </p><p> </p><p> </p><p> </p><p><a id="_Create_Tariff"></a> </p><p> </p></div><div><p><br/>‎<span> </span></p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><p> </p><h1><a id="_Toc31205463"></a>Web interface administration</h1><p><br/>‎<span> </span></p></div></body></html>