<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="UTF-8"/><title>Service policies</title><meta name="generator" content="Adobe RoboHelp 2019"/><link rel="stylesheet" href="../assets/css/default.css"/><link rel="stylesheet" href="../assets/css/PortaBilling_Admin_Guide_MR82.css"/></head><body><div><h2><a id="_Toc31205431"></a>Service policies</h2><p>The telecommunications industry is growing rapidly with new technologies and devices being introduced into the market all the time. Networks have become more flexible and customers have become more demanding about the services that they subscribe to. Under these conditions, it is essential to not only continually offer new services and products and keep up with market demand, but also to do this in the most qualitative and flexible manner. This is what PortaBilling® enables you to do! </p><p> </p><p>The Service policies feature allows you to fine-tune your services based on your network peculiarities, vendors’ opportunities and customers’ demands. It facilitates the configuration of static options for multiple accounts (so it is not necessary to configure values for each account separately), thus establishing common policies for groups of accounts. It also allows you to separate the technical configuration of specific options (usually made by technical staff) from account management.</p><p> </p><p>When a new policy is created, it does not have any attributes defined (all available attributes are shown in grey). To define an attribute, specify its value.</p><p> </p><p>Service policies can be statically assigned at various levels: account, product, connection and authentication (call handling rule). In addition, it is possible to apply service policies depending upon the UA type (dynamically matched policy).  </p><h4>Dynamically matched policies</h4><p>The service policy has the ability to match dynamically when the Match Pattern is specified. For the calling party, PortaSIP extracts the User-Agent header from the incoming INVITE request (e.g. “Linksys/SPA941-5.1.8”) and matches it against all of the dynamic policies. If more than one policy matches, the one with the highest Match Priority is used.</p><p> </p><p>For the called party, the procedure is quite similar. The only difference is that the User-Agent header of a called UA is taken from its registration information.</p><h4>Policy precedence for VoIP services</h4><p>Note that service policies apply for both call parties (caller and callee) individually. The final set of attributes for each party is derived from service policies applied to different stages (a service policy matched on initial request is also considered). </p><p> </p><p>To illustrate how this works in practice, consider the following example:</p><p>Let’s say John Doe makes a call to number 12125554521. You want to ensure that the call passes via the G.711 codec so you configure the service policy for John’s account and define G.711 as the first codec for the codec_order_list option.</p><p> </p><p>When John calls, the service policy assigned to his account is applied and this reorders the codecs.</p><p> </p><p>The call is routed to the ABC vendor who requires the user identity of the user making the call. Therefore, the service policy assigned to the ABC vendor connection instructs PortaSIP® to send the user identity information in the INVITE request.</p><p> </p><p>What happens if there is a contradiction in service policies? For example, if a service policy matched upon initial request has the no_voice_rejects attribute set to Yes, while the service policy assigned to a called party has its attribute value set to No?</p><p> </p><p>Several simultaneously applied service policies function according to the precedence of defined attributes that are exact matches: </p><ul data-start="1.345" xmlns=""><li><ul data-start="1.345"><li>If there is a policy that corresponds with the SIP endpoint name of the called party, then this policy’s attributes are applied.</li><li>If the called party has a service policy assigned via a product, then that overrides the one matched upon initial request and its attributes are applied. However, if an administrator overrides a service policy for an account, this policy takes the highest priority.</li><li>The same attribute can be defined in the service policy assigned to the call handling rule and the one assigned to the incoming connection. In this case, the service policy assigned to the connection takes higher precedence and its attribute value is applied.</li></ul></li></ul><h4>Built-in policy attributes</h4><p>There is an attribute-specific prevalence among service policy attributes assigned to both caller and called accounts:</p><ul data-start="303" xmlns=""><li>The codec_order_list attribute is taken from the caller’s account (called account’s attribute is ignored).</li><li>The “header” attributes (out_hdr_pai, out_hdr_rpid, out_hdr_history, out_hdr_diversion) defined for a called account take precedence over the ones defined for a caller account.</li><li>The keep_alive_interval attributes are individually defined for both the caller and called parties, so there is no dominance between them. The value for the calling party is taken from the service policy assigned to that account. The value for a called party is taken from the service policy assigned to the connection or the one that’s assigned to the account if the called party is one of your accounts. </li></ul></div></body></html>